#include <stdio.h>
#define TOTAL_BLOCKS 16
#define BLOCK_SIZE 1024
#define INODE_BLOCKS 8
#define DATA_BLOCKS_START 8
#define MIN_FILE_SIZE 1024
int is_contiguous_free(int start_block, int num_blocks, int block_status[]) {
    for (int i = start_block; i < start_block + num_blocks; i++) {
        if (block_status[i] == 1) {
            return 0; 
        }
    }
    return 1;
}
void allocate_blocks(int start_block, int num_blocks, int block_status[]) {
    for (int i = start_block; i < start_block + num_blocks; i++) {
        block_status[i] = 1; 
    }
}
int main() {
    int block_status[TOTAL_BLOCKS] = {0}; 
    int start_block, num_blocks;
    printf("Enter the starting block for the file: ");
    scanf("%d", &start_block);
    printf("Enter the number of blocks required for the file: ");
    scanf("%d", &num_blocks);
    if (start_block < DATA_BLOCKS_START || start_block + num_blocks > TOTAL_BLOCKS || num_blocks < 1) {
        printf("Invalid input. Exiting program.\n");
        return 1;
    }
    if (is_contiguous_free(start_block, num_blocks, block_status)) {
        allocate_blocks(start_block, num_blocks, block_status);
        printf("File allocated successfully.\n");
    } else {
        printf("Not enough contiguous blocks available. Exiting program.\n");
        return 1;
    }
    return 0;
}
