#include <stdio.h>
#define BLOCK_SIZE 8
#define POINTER_SIZE 4
struct Inode {
    int direct_blocks[12];
    int single_indirect;
    int double_indirect;
    int triple_indirect;
};
int isBlockFree(int blockNumber) {
    return 1; 
}
void allocateBlock(int blockNumber) {
}

int findContiguousBlocks(int numBlocks) {
    return 0;
}
long long calculateMaxFileSize() {
    long long directBlockSize = 12 * BLOCK_SIZE;
    long long singleIndirectSize = BLOCK_SIZE * (BLOCK_SIZE / POINTER_SIZE);
    long long doubleIndirectSize = singleIndirectSize * (BLOCK_SIZE / POINTER_SIZE);
    long long tripleIndirectSize = doubleIndirectSize * (BLOCK_SIZE / POINTER_SIZE);
    long long totalSize = directBlockSize + singleIndirectSize + doubleIndirectSize + tripleIndirectSize;
    return totalSize;
}

int main() {
    long long maxSize = calculateMaxFileSize();
    printf("Maximum file size: %lld bytes\n", maxSize);
    return 0;
}
